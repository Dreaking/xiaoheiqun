def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
def keystorePropertiesFile = rootProject.file("key.properties")

def keystoreProperties = new Properties()

keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

repositories {
    flatDir {
        dirs 'libs'
    }
}
android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.fuman.flutter.xiaoheiqun"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'x86', 'x86_64', 'mips', 'mips64', 'arm64-v8a'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "7861397af19cbdeaef2afa47", // NOTE: JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
        multiDexEnabled true

    }

    signingConfigs {

        release {

            keyAlias keystoreProperties['keyAlias']

            keyPassword keystoreProperties['keyPassword']

            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            }
    }
    buildTypes {

        release {

            signingConfig signingConfigs.release

            }

    }

}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    /* 友盟 start */
    // common
    implementation 'com.umeng.umsdk:common:2.1.0'
//    implementation 'com.umeng.umsdk:utdid:1.1.5.3'
    // analytics
    implementation 'com.umeng.umsdk:analytics:8.1.1'
    // push
    implementation 'com.umeng.umsdk:push:6.0.1'
    // 小米Push通道
//    implementation 'com.umeng.umsdk:xiaomi-push:3.6.17'
//    implementation 'com.umeng.umsdk:xiaomi-umengaccs:1.1.0'
    // share
    implementation 'com.umeng.umsdk:share-core:6.9.6'
    implementation 'com.umeng.umsdk:share-board:6.9.6'
    implementation 'com.umeng.umsdk:share-qq:6.9.6'
    implementation 'com.umeng.umsdk:share-wx:6.9.6'
    implementation 'com.umeng.umsdk:share-sina:6.9.6'
    implementation files('src/libs/pldroid-shortvideo-2.2.1.jar')
}
